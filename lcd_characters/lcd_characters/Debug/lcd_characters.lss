
lcd_characters.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  000003f8  0000048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800144  00800144  000004d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000500  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000540  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001475  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b9  00000000  00000000  00001acd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f7  00000000  00000000  00002486  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00002d80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f9  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b0  00000000  00000000  00003531  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000039e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ef       	ldi	r30, 0xF8	; 248
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 34       	cpi	r26, 0x44	; 68
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e4       	ldi	r26, 0x44	; 68
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 34       	cpi	r26, 0x49	; 73
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d1 d0       	rcall	.+418    	; 0x266 <main>
  c4:	97 c1       	rjmp	.+814    	; 0x3f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_13>:
        ShRegPulse();
        data=data<<1;
    }

    ShRegLatch();
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
  de:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x1>
  e2:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <__data_end+0x2>
  e6:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <__data_end+0x3>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	a1 09       	sbc	r26, r1
  ee:	b1 09       	sbc	r27, r1
  f0:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
  f4:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x1>
  f8:	a0 93 46 01 	sts	0x0146, r26	; 0x800146 <__data_end+0x2>
  fc:	b0 93 47 01 	sts	0x0147, r27	; 0x800147 <__data_end+0x3>
 100:	89 2b       	or	r24, r25
 102:	8a 2b       	or	r24, r26
 104:	8b 2b       	or	r24, r27
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_13+0x66>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <TimerFlag>
 10e:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <_avr_timer_M>
 112:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <_avr_timer_M+0x1>
 116:	a0 91 42 01 	lds	r26, 0x0142	; 0x800142 <_avr_timer_M+0x2>
 11a:	b0 91 43 01 	lds	r27, 0x0143	; 0x800143 <_avr_timer_M+0x3>
 11e:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
 122:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x1>
 126:	a0 93 46 01 	sts	0x0146, r26	; 0x800146 <__data_end+0x2>
 12a:	b0 93 47 01 	sts	0x0147, r27	; 0x800147 <__data_end+0x3>
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <delay_ms>:
 140:	18 16       	cp	r1, r24
 142:	19 06       	cpc	r1, r25
 144:	5c f0       	brlt	.+22     	; 0x15c <delay_ms+0x1c>
 146:	08 95       	ret
 148:	00 00       	nop
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	31 09       	sbc	r19, r1
 14e:	e1 f7       	brne	.-8      	; 0x148 <delay_ms+0x8>
 150:	4f 5f       	subi	r20, 0xFF	; 255
 152:	5f 4f       	sbci	r21, 0xFF	; 255
 154:	84 17       	cp	r24, r20
 156:	95 07       	cpc	r25, r21
 158:	19 f4       	brne	.+6      	; 0x160 <delay_ms+0x20>
 15a:	08 95       	ret
 15c:	40 e0       	ldi	r20, 0x00	; 0
 15e:	50 e0       	ldi	r21, 0x00	; 0
 160:	27 e0       	ldi	r18, 0x07	; 7
 162:	33 e0       	ldi	r19, 0x03	; 3
 164:	f1 cf       	rjmp	.-30     	; 0x148 <delay_ms+0x8>

00000166 <LCD_WriteCommand>:
 166:	40 98       	cbi	0x08, 0	; 8
 168:	8b b9       	out	0x0b, r24	; 11
 16a:	41 9a       	sbi	0x08, 1	; 8
 16c:	00 00       	nop
 16e:	41 98       	cbi	0x08, 1	; 8
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	e5 cf       	rjmp	.-54     	; 0x140 <delay_ms>
 176:	08 95       	ret

00000178 <LCD_ClearScreen>:
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	f5 cf       	rjmp	.-22     	; 0x166 <LCD_WriteCommand>
 17c:	08 95       	ret

0000017e <LCD_Cursor>:
 17e:	81 31       	cpi	r24, 0x11	; 17
 180:	18 f4       	brcc	.+6      	; 0x188 <LCD_Cursor+0xa>
 182:	81 58       	subi	r24, 0x81	; 129
 184:	f0 cf       	rjmp	.-32     	; 0x166 <LCD_WriteCommand>
 186:	08 95       	ret
 188:	81 55       	subi	r24, 0x51	; 81
 18a:	ed cf       	rjmp	.-38     	; 0x166 <LCD_WriteCommand>
 18c:	08 95       	ret

0000018e <LCD_WriteData>:
 18e:	40 9a       	sbi	0x08, 0	; 8
 190:	8b b9       	out	0x0b, r24	; 11
 192:	41 9a       	sbi	0x08, 1	; 8
 194:	00 00       	nop
 196:	41 98       	cbi	0x08, 1	; 8
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	d1 cf       	rjmp	.-94     	; 0x140 <delay_ms>
 19e:	08 95       	ret

000001a0 <LCD_DisplayString>:
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	18 2f       	mov	r17, r24
 1aa:	eb 01       	movw	r28, r22
 1ac:	e5 df       	rcall	.-54     	; 0x178 <LCD_ClearScreen>
 1ae:	88 81       	ld	r24, Y
 1b0:	88 23       	and	r24, r24
 1b2:	51 f0       	breq	.+20     	; 0x1c8 <LCD_DisplayString+0x28>
 1b4:	01 e0       	ldi	r16, 0x01	; 1
 1b6:	01 0f       	add	r16, r17
 1b8:	81 2f       	mov	r24, r17
 1ba:	e1 df       	rcall	.-62     	; 0x17e <LCD_Cursor>
 1bc:	89 91       	ld	r24, Y+
 1be:	e7 df       	rcall	.-50     	; 0x18e <LCD_WriteData>
 1c0:	10 2f       	mov	r17, r16
 1c2:	88 81       	ld	r24, Y
 1c4:	81 11       	cpse	r24, r1
 1c6:	f6 cf       	rjmp	.-20     	; 0x1b4 <LCD_DisplayString+0x14>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	1f 91       	pop	r17
 1ce:	0f 91       	pop	r16
 1d0:	08 95       	ret

000001d2 <LCD_BuildCharacter>:
 1d2:	0f 93       	push	r16
 1d4:	1f 93       	push	r17
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	8b 01       	movw	r16, r22
 1dc:	88 30       	cpi	r24, 0x08	; 8
 1de:	68 f4       	brcc	.+26     	; 0x1fa <LCD_BuildCharacter+0x28>
 1e0:	88 0f       	add	r24, r24
 1e2:	88 0f       	add	r24, r24
 1e4:	88 0f       	add	r24, r24
 1e6:	80 5c       	subi	r24, 0xC0	; 192
 1e8:	be df       	rcall	.-132    	; 0x166 <LCD_WriteCommand>
 1ea:	e8 01       	movw	r28, r16
 1ec:	08 5f       	subi	r16, 0xF8	; 248
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
 1f0:	89 91       	ld	r24, Y+
 1f2:	cd df       	rcall	.-102    	; 0x18e <LCD_WriteData>
 1f4:	c0 17       	cp	r28, r16
 1f6:	d1 07       	cpc	r29, r17
 1f8:	d9 f7       	brne	.-10     	; 0x1f0 <LCD_BuildCharacter+0x1e>
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	b4 df       	rcall	.-152    	; 0x166 <LCD_WriteCommand>
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	1f 91       	pop	r17
 204:	0f 91       	pop	r16
 206:	08 95       	ret

00000208 <LCD_init>:
 208:	84 e6       	ldi	r24, 0x64	; 100
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	99 df       	rcall	.-206    	; 0x140 <delay_ms>
 20e:	88 e3       	ldi	r24, 0x38	; 56
 210:	aa df       	rcall	.-172    	; 0x166 <LCD_WriteCommand>
 212:	86 e0       	ldi	r24, 0x06	; 6
 214:	a8 df       	rcall	.-176    	; 0x166 <LCD_WriteCommand>
 216:	8f e0       	ldi	r24, 0x0F	; 15
 218:	a6 df       	rcall	.-180    	; 0x166 <LCD_WriteCommand>
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	a4 df       	rcall	.-184    	; 0x166 <LCD_WriteCommand>
 21e:	8a e0       	ldi	r24, 0x0A	; 10
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	8e df       	rcall	.-228    	; 0x140 <delay_ms>
 224:	68 e3       	ldi	r22, 0x38	; 56
 226:	71 e0       	ldi	r23, 0x01	; 1
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	d3 df       	rcall	.-90     	; 0x1d2 <LCD_BuildCharacter>
 22c:	60 e3       	ldi	r22, 0x30	; 48
 22e:	71 e0       	ldi	r23, 0x01	; 1
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	cf df       	rcall	.-98     	; 0x1d2 <LCD_BuildCharacter>
 234:	68 e2       	ldi	r22, 0x28	; 40
 236:	71 e0       	ldi	r23, 0x01	; 1
 238:	82 e0       	ldi	r24, 0x02	; 2
 23a:	cb df       	rcall	.-106    	; 0x1d2 <LCD_BuildCharacter>
 23c:	60 e2       	ldi	r22, 0x20	; 32
 23e:	71 e0       	ldi	r23, 0x01	; 1
 240:	83 e0       	ldi	r24, 0x03	; 3
 242:	c7 df       	rcall	.-114    	; 0x1d2 <LCD_BuildCharacter>
 244:	68 e1       	ldi	r22, 0x18	; 24
 246:	71 e0       	ldi	r23, 0x01	; 1
 248:	84 e0       	ldi	r24, 0x04	; 4
 24a:	c3 df       	rcall	.-122    	; 0x1d2 <LCD_BuildCharacter>
 24c:	60 e1       	ldi	r22, 0x10	; 16
 24e:	71 e0       	ldi	r23, 0x01	; 1
 250:	85 e0       	ldi	r24, 0x05	; 5
 252:	bf df       	rcall	.-130    	; 0x1d2 <LCD_BuildCharacter>
 254:	68 e0       	ldi	r22, 0x08	; 8
 256:	71 e0       	ldi	r23, 0x01	; 1
 258:	86 e0       	ldi	r24, 0x06	; 6
 25a:	bb df       	rcall	.-138    	; 0x1d2 <LCD_BuildCharacter>
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	71 e0       	ldi	r23, 0x01	; 1
 260:	87 e0       	ldi	r24, 0x07	; 7
 262:	b7 cf       	rjmp	.-146    	; 0x1d2 <LCD_BuildCharacter>
 264:	08 95       	ret

00000266 <main>:
//unsigned char u9[8] = { 0x1F, 0x19, 0x1A, 0x1E, 0x1E, 0x1A, 0x19, 0x1F}; //e
//unsigned char u10[8] = {0x11, 0x0A, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15}; //m
    
    unsigned char RTARR[8]={0x00,0x18,0x3C,0x7E,0x18,0x18,0x18,0x00}; //LED Matrix pattern for right arrow
int main(void)
{
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	00 d0       	rcall	.+0      	; 0x26c <main+0x6>
 26c:	cd b7       	in	r28, 0x3d	; 61
 26e:	de b7       	in	r29, 0x3e	; 62
    DDRD = 0xFF; PORTD = 0x00;
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	8a b9       	out	0x0a, r24	; 10
 274:	1b b8       	out	0x0b, r1	; 11
    DDRA = 0x00; PORTA = 0xFF;
 276:	11 b8       	out	0x01, r1	; 1
 278:	82 b9       	out	0x02, r24	; 2
    DDRB = 0xFF; PORTB = 0x00;
 27a:	84 b9       	out	0x04, r24	; 4
 27c:	15 b8       	out	0x05, r1	; 5
    DDRC = 0xFF; PORTC = 0x00;
 27e:	87 b9       	out	0x07, r24	; 7
 280:	18 b8       	out	0x08, r1	; 8
    
    LCD_init();
 282:	c2 df       	rcall	.-124    	; 0x208 <LCD_init>
   //LCD_DisplayString(1, "???????????? ????????????");
    //LCD_Cursor(0x00);
    LCD_BuildCharacter(0,u1);
 284:	68 e3       	ldi	r22, 0x38	; 56
 286:	71 e0       	ldi	r23, 0x01	; 1
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	a3 df       	rcall	.-186    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(1,u2);
 28c:	60 e3       	ldi	r22, 0x30	; 48
 28e:	71 e0       	ldi	r23, 0x01	; 1
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	9f df       	rcall	.-194    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(2,u3);
 294:	68 e2       	ldi	r22, 0x28	; 40
 296:	71 e0       	ldi	r23, 0x01	; 1
 298:	82 e0       	ldi	r24, 0x02	; 2
 29a:	9b df       	rcall	.-202    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(3,u4);
 29c:	60 e2       	ldi	r22, 0x20	; 32
 29e:	71 e0       	ldi	r23, 0x01	; 1
 2a0:	83 e0       	ldi	r24, 0x03	; 3
 2a2:	97 df       	rcall	.-210    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(4,u5);
 2a4:	68 e1       	ldi	r22, 0x18	; 24
 2a6:	71 e0       	ldi	r23, 0x01	; 1
 2a8:	84 e0       	ldi	r24, 0x04	; 4
 2aa:	93 df       	rcall	.-218    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(5,u6);
 2ac:	60 e1       	ldi	r22, 0x10	; 16
 2ae:	71 e0       	ldi	r23, 0x01	; 1
 2b0:	85 e0       	ldi	r24, 0x05	; 5
 2b2:	8f df       	rcall	.-226    	; 0x1d2 <LCD_BuildCharacter>
    LCD_BuildCharacter(6,u7); //s
 2b4:	68 e0       	ldi	r22, 0x08	; 8
 2b6:	71 e0       	ldi	r23, 0x01	; 1
 2b8:	86 e0       	ldi	r24, 0x06	; 6
    LCD_BuildCharacter(7,u9); //e
 2ba:	8b df       	rcall	.-234    	; 0x1d2 <LCD_BuildCharacter>
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	71 e0       	ldi	r23, 0x01	; 1
 2c0:	87 e0       	ldi	r24, 0x07	; 7
    
    
    
    LCD_Cursor(0x05);
 2c2:	87 df       	rcall	.-242    	; 0x1d2 <LCD_BuildCharacter>
 2c4:	85 e0       	ldi	r24, 0x05	; 5
 2c6:	5b df       	rcall	.-330    	; 0x17e <LCD_Cursor>
    LCD_WriteData(0b11);
 2c8:	83 e0       	ldi	r24, 0x03	; 3
 2ca:	61 df       	rcall	.-318    	; 0x18e <LCD_WriteData>
    //LCD_WriteData(6);
    //LCD_WriteData(84);
    //LCD_WriteData(7);
    //LCD_WriteData(77);
    //LCD_DisplayString(7, "ySTEM");
    LCD_Cursor(0x15);
 2cc:	85 e1       	ldi	r24, 0x15	; 21
 2ce:	57 df       	rcall	.-338    	; 0x17e <LCD_Cursor>
 2d0:	10 e0       	ldi	r17, 0x00	; 0
    //LCD_BuildCharacter(5,u10);
    //for(unsigned char i = 0; i<6; i++){
        //LCD_WriteData(i);
    //}
    
    for(unsigned char i = 0; i<6; i++){
 2d2:	81 2f       	mov	r24, r17
        LCD_WriteData(i);
 2d4:	5c df       	rcall	.-328    	; 0x18e <LCD_WriteData>
 2d6:	1f 5f       	subi	r17, 0xFF	; 255
    //LCD_BuildCharacter(5,u10);
    //for(unsigned char i = 0; i<6; i++){
        //LCD_WriteData(i);
    //}
    
    for(unsigned char i = 0; i<6; i++){
 2d8:	16 30       	cpi	r17, 0x06	; 6
 2da:	d9 f7       	brne	.-10     	; 0x2d2 <main+0x6c>
 2dc:	4d df       	rcall	.-358    	; 0x178 <LCD_ClearScreen>
    //LCD_BuildCharacter(2, portrEYE); // stores porter eyeball to memory location 0x02
    //LCD_BuildCharacter(3, portrMTL); // stores 1st half of porter mouth to location 0x03
    //LCD_BuildCharacter(4, portrMTR); // stores 2nd half of porter mouth to location 0x04
    //LCD_BuildCharacter(5, portrCLS); // stores porter close brace to mem location 0x05
    
    LCD_ClearScreen();
 2de:	82 e0       	ldi	r24, 0x02	; 2
    //a= eeprom_read_byte((uint8_t*)1);
    
    unsigned char button;
    unsigned char buffer [2];
    //LCD_DisplayString(1,x);
    LCD_Cursor(2);
 2e0:	4e df       	rcall	.-356    	; 0x17e <LCD_Cursor>
 2e2:	45 e0       	ldi	r20, 0x05	; 5
 2e4:	50 e0       	ldi	r21, 0x00	; 0
    
    //itoa(m_score, buffer, 10);
    //LCD_DisplayString(1, buffer);
    
    eeprom_read_block((void*)&buffer, (const void*)1, 5);
 2e6:	61 e0       	ldi	r22, 0x01	; 1
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	ce 01       	movw	r24, r28
 2ec:	01 96       	adiw	r24, 0x01	; 1
 2ee:	5b d0       	rcall	.+182    	; 0x3a6 <eeprom_read_block>
 2f0:	be 01       	movw	r22, r28
 2f2:	6f 5f       	subi	r22, 0xFF	; 255
 2f4:	7f 4f       	sbci	r23, 0xFF	; 255
    ////m_score++;
    //itoa(x, buffer, 10);
    //eeprom_write_block ((void*)&buffer, (const void*)1, 5);
    
    
    LCD_DisplayString(1, buffer);
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	53 df       	rcall	.-346    	; 0x1a0 <LCD_DisplayString>
 2fa:	12 e0       	ldi	r17, 0x02	; 2
 2fc:	00 99       	sbic	0x00, 0	; 0
 2fe:	fe cf       	rjmp	.-4      	; 0x2fc <main+0x96>
    
    LCD_ClearScreen();
  
    
    unsigned char m_score = 0;
    unsigned char x = 2;
 300:	1f 5f       	subi	r17, 0xFF	; 255
            //itoa(m_score, buffer, 10);
            ////sprintf(buffer, "", m_score);
            //LCD_DisplayString(1, buffer);
            //eeprom_write_block ((void*)&buffer, (const void*)1, 5);
        //} 
        if(button){
 302:	4a e0       	ldi	r20, 0x0A	; 10
            x++;
 304:	50 e0       	ldi	r21, 0x00	; 0
            
            itoa(x, buffer, 10);
 306:	be 01       	movw	r22, r28
 308:	6f 5f       	subi	r22, 0xFF	; 255
 30a:	7f 4f       	sbci	r23, 0xFF	; 255
 30c:	81 2f       	mov	r24, r17
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0d d0       	rcall	.+26     	; 0x32c <itoa>
 312:	45 e0       	ldi	r20, 0x05	; 5
 314:	50 e0       	ldi	r21, 0x00	; 0
            eeprom_write_block ((void*)&buffer, (const void*)1, 5);
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	ce 01       	movw	r24, r28
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	53 d0       	rcall	.+166    	; 0x3c6 <eeprom_write_block>
 320:	be 01       	movw	r22, r28
 322:	6f 5f       	subi	r22, 0xFF	; 255
 324:	7f 4f       	sbci	r23, 0xFF	; 255
            LCD_DisplayString(1, buffer);
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	3b df       	rcall	.-394    	; 0x1a0 <LCD_DisplayString>
 32a:	e8 cf       	rjmp	.-48     	; 0x2fc <main+0x96>

0000032c <itoa>:
 32c:	45 32       	cpi	r20, 0x25	; 37
 32e:	51 05       	cpc	r21, r1
 330:	18 f4       	brcc	.+6      	; 0x338 <itoa+0xc>
 332:	42 30       	cpi	r20, 0x02	; 2
 334:	08 f0       	brcs	.+2      	; 0x338 <itoa+0xc>
 336:	04 c0       	rjmp	.+8      	; 0x340 <__itoa_ncheck>
 338:	fb 01       	movw	r30, r22
 33a:	10 82       	st	Z, r1
 33c:	cb 01       	movw	r24, r22
 33e:	08 95       	ret

00000340 <__itoa_ncheck>:
 340:	bb 27       	eor	r27, r27
 342:	4a 30       	cpi	r20, 0x0A	; 10
 344:	31 f4       	brne	.+12     	; 0x352 <__itoa_ncheck+0x12>
 346:	99 23       	and	r25, r25
 348:	22 f4       	brpl	.+8      	; 0x352 <__itoa_ncheck+0x12>
 34a:	bd e2       	ldi	r27, 0x2D	; 45
 34c:	90 95       	com	r25
 34e:	81 95       	neg	r24
 350:	9f 4f       	sbci	r25, 0xFF	; 255
 352:	01 c0       	rjmp	.+2      	; 0x356 <__utoa_common>

00000354 <__utoa_ncheck>:
 354:	bb 27       	eor	r27, r27

00000356 <__utoa_common>:
 356:	fb 01       	movw	r30, r22
 358:	55 27       	eor	r21, r21
 35a:	aa 27       	eor	r26, r26
 35c:	88 0f       	add	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	aa 1f       	adc	r26, r26
 362:	a4 17       	cp	r26, r20
 364:	10 f0       	brcs	.+4      	; 0x36a <__utoa_common+0x14>
 366:	a4 1b       	sub	r26, r20
 368:	83 95       	inc	r24
 36a:	50 51       	subi	r21, 0x10	; 16
 36c:	b9 f7       	brne	.-18     	; 0x35c <__utoa_common+0x6>
 36e:	a0 5d       	subi	r26, 0xD0	; 208
 370:	aa 33       	cpi	r26, 0x3A	; 58
 372:	08 f0       	brcs	.+2      	; 0x376 <__utoa_common+0x20>
 374:	a9 5d       	subi	r26, 0xD9	; 217
 376:	a1 93       	st	Z+, r26
 378:	00 97       	sbiw	r24, 0x00	; 0
 37a:	79 f7       	brne	.-34     	; 0x35a <__utoa_common+0x4>
 37c:	b1 11       	cpse	r27, r1
 37e:	b1 93       	st	Z+, r27
 380:	11 92       	st	Z+, r1
 382:	cb 01       	movw	r24, r22
 384:	00 c0       	rjmp	.+0      	; 0x386 <strrev>

00000386 <strrev>:
 386:	dc 01       	movw	r26, r24
 388:	fc 01       	movw	r30, r24
 38a:	67 2f       	mov	r22, r23
 38c:	71 91       	ld	r23, Z+
 38e:	77 23       	and	r23, r23
 390:	e1 f7       	brne	.-8      	; 0x38a <strrev+0x4>
 392:	32 97       	sbiw	r30, 0x02	; 2
 394:	04 c0       	rjmp	.+8      	; 0x39e <strrev+0x18>
 396:	7c 91       	ld	r23, X
 398:	6d 93       	st	X+, r22
 39a:	70 83       	st	Z, r23
 39c:	62 91       	ld	r22, -Z
 39e:	ae 17       	cp	r26, r30
 3a0:	bf 07       	cpc	r27, r31
 3a2:	c8 f3       	brcs	.-14     	; 0x396 <strrev+0x10>
 3a4:	08 95       	ret

000003a6 <eeprom_read_block>:
 3a6:	dc 01       	movw	r26, r24
 3a8:	cb 01       	movw	r24, r22

000003aa <eeprom_read_blraw>:
 3aa:	fc 01       	movw	r30, r24
 3ac:	f9 99       	sbic	0x1f, 1	; 31
 3ae:	fe cf       	rjmp	.-4      	; 0x3ac <eeprom_read_blraw+0x2>
 3b0:	06 c0       	rjmp	.+12     	; 0x3be <eeprom_read_blraw+0x14>
 3b2:	f2 bd       	out	0x22, r31	; 34
 3b4:	e1 bd       	out	0x21, r30	; 33
 3b6:	f8 9a       	sbi	0x1f, 0	; 31
 3b8:	31 96       	adiw	r30, 0x01	; 1
 3ba:	00 b4       	in	r0, 0x20	; 32
 3bc:	0d 92       	st	X+, r0
 3be:	41 50       	subi	r20, 0x01	; 1
 3c0:	50 40       	sbci	r21, 0x00	; 0
 3c2:	b8 f7       	brcc	.-18     	; 0x3b2 <eeprom_read_blraw+0x8>
 3c4:	08 95       	ret

000003c6 <eeprom_write_block>:
 3c6:	dc 01       	movw	r26, r24
 3c8:	cb 01       	movw	r24, r22
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <eeprom_write_block+0xa>
 3cc:	2d 91       	ld	r18, X+
 3ce:	05 d0       	rcall	.+10     	; 0x3da <eeprom_write_r18>
 3d0:	41 50       	subi	r20, 0x01	; 1
 3d2:	50 40       	sbci	r21, 0x00	; 0
 3d4:	d8 f7       	brcc	.-10     	; 0x3cc <eeprom_write_block+0x6>
 3d6:	08 95       	ret

000003d8 <eeprom_write_byte>:
 3d8:	26 2f       	mov	r18, r22

000003da <eeprom_write_r18>:
 3da:	f9 99       	sbic	0x1f, 1	; 31
 3dc:	fe cf       	rjmp	.-4      	; 0x3da <eeprom_write_r18>
 3de:	1f ba       	out	0x1f, r1	; 31
 3e0:	92 bd       	out	0x22, r25	; 34
 3e2:	81 bd       	out	0x21, r24	; 33
 3e4:	20 bd       	out	0x20, r18	; 32
 3e6:	0f b6       	in	r0, 0x3f	; 63
 3e8:	f8 94       	cli
 3ea:	fa 9a       	sbi	0x1f, 2	; 31
 3ec:	f9 9a       	sbi	0x1f, 1	; 31
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	08 95       	ret

000003f4 <_exit>:
 3f4:	f8 94       	cli

000003f6 <__stop_program>:
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <__stop_program>
