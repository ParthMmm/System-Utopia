
matrix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000001a2  00000236  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080010c  0080010c  00000242  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000242  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b44  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000911  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b6  00000000  00000000  00001781  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00001c38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004bb  00000000  00000000  00001d58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000256  00000000  00000000  00002213  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002469  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ea       	ldi	r30, 0xA2	; 162
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 31       	cpi	r26, 0x11	; 17
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	5f d0       	rcall	.+190    	; 0x182 <main>
  c4:	6c c0       	rjmp	.+216    	; 0x19e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_13>:
        case wait2:
        //HC595Write(255);
        break;
    }
    
}
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  de:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
  e2:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <__data_end+0x2>
  e6:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <__data_end+0x3>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	a1 09       	sbc	r26, r1
  ee:	b1 09       	sbc	r27, r1
  f0:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
  f4:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
  f8:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <__data_end+0x2>
  fc:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <__data_end+0x3>
 100:	89 2b       	or	r24, r25
 102:	8a 2b       	or	r24, r26
 104:	8b 2b       	or	r24, r27
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_13+0x66>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <TimerFlag>
 10e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_avr_timer_M>
 112:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_avr_timer_M+0x1>
 116:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <_avr_timer_M+0x2>
 11a:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <_avr_timer_M+0x3>
 11e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 122:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 126:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <__data_end+0x2>
 12a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <__data_end+0x3>
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <HC595Init>:
 140:	84 b1       	in	r24, 0x04	; 4
 142:	87 60       	ori	r24, 0x07	; 7
 144:	84 b9       	out	0x04, r24	; 4
 146:	08 95       	ret

00000148 <HC595Pulse>:
 148:	2a 9a       	sbi	0x05, 2	; 5
 14a:	2a 98       	cbi	0x05, 2	; 5
 14c:	08 95       	ret

0000014e <HC595Latch>:
 14e:	29 9a       	sbi	0x05, 1	; 5
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	98 2f       	mov	r25, r24
 154:	9a 95       	dec	r25
 156:	f1 f7       	brne	.-4      	; 0x154 <HC595Latch+0x6>
 158:	29 98       	cbi	0x05, 1	; 5
 15a:	8a 95       	dec	r24
 15c:	f1 f7       	brne	.-4      	; 0x15a <HC595Latch+0xc>
 15e:	08 95       	ret

00000160 <HC595Write>:
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	d8 2f       	mov	r29, r24
 166:	c8 e0       	ldi	r28, 0x08	; 8
 168:	dd 23       	and	r29, r29
 16a:	14 f4       	brge	.+4      	; 0x170 <HC595Write+0x10>
 16c:	28 9a       	sbi	0x05, 0	; 5
 16e:	01 c0       	rjmp	.+2      	; 0x172 <HC595Write+0x12>
 170:	28 98       	cbi	0x05, 0	; 5
 172:	ea df       	rcall	.-44     	; 0x148 <HC595Pulse>
 174:	dd 0f       	add	r29, r29
 176:	c1 50       	subi	r28, 0x01	; 1
 178:	b9 f7       	brne	.-18     	; 0x168 <HC595Write+0x8>
 17a:	e9 df       	rcall	.-46     	; 0x14e <HC595Latch>
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <main>:

int main(void){
    DDRB = 0xFF; PORTB = 0x00;
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	84 b9       	out	0x04, r24	; 4
 186:	15 b8       	out	0x05, r1	; 5
    HC595Init();
 188:	db df       	rcall	.-74     	; 0x140 <HC595Init>
 18a:	c0 e0       	ldi	r28, 0x00	; 0
 18c:	d1 e0       	ldi	r29, 0x01	; 1
 18e:	08 e0       	ldi	r16, 0x08	; 8
 190:	11 e0       	ldi	r17, 0x01	; 1
    //TimerSet(200);
    //TimerOn();
 
    for(unsigned char i =0; i<8; i++){
    
        HC595Write(all[i]);
 192:	89 91       	ld	r24, Y+
 194:	e5 df       	rcall	.-54     	; 0x160 <HC595Write>
    DDRB = 0xFF; PORTB = 0x00;
    HC595Init();
    //TimerSet(200);
    //TimerOn();
 
    for(unsigned char i =0; i<8; i++){
 196:	c0 17       	cp	r28, r16
 198:	d1 07       	cpc	r29, r17
 19a:	d9 f7       	brne	.-10     	; 0x192 <main+0x10>
 19c:	ff cf       	rjmp	.-2      	; 0x19c <main+0x1a>

0000019e <_exit>:
 19e:	f8 94       	cli

000001a0 <__stop_program>:
 1a0:	ff cf       	rjmp	.-2      	; 0x1a0 <__stop_program>
